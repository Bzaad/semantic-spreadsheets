# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

GET     /                                               @controllers.CurrentEvent.index
POST    /tempid                                         @controllers.CurrentEvent.tempid
POST    /leave                                          @controllers.CurrentEvent.leave
GET     /event                                          @controllers.CurrentEvent.event
GET     /socket                                         @controllers.CurrentEvent.socket

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file                                   @controllers.Assets.versioned(path="/public", file: Asset)

# map webjars assets
GET     /webjars/*file                                  @controllers.WebJarAssets.at(file)

# Get the triple and return the gotten triple along with a 200 message
# POST 	/triples/add/:tObject/:tPredicate/:tSubject 	@controllers.PdStore.add(tObject: String, tPredicate: String, tSubject: String)

# Remove the triple and return a removed 200 message
# DELETE /triples/delete/:tObject/:tPredicate/:tSubject 	@controllers.PdStore.remove(tObject: String, tPredicate: String, tSubject: String)

# Query and return the results along with a 200
# GET 	/triples/query/:qObject/:qPredicate/:qSubject 	@controllers.PdStore.query(qObject: String, qPredicate: String, qSubject: String)

# Returns a predefined Json Object (for Testing porpuses only!)
# GET     /testjson                                       @controllers.PdStore.getJsonTest

# Echoes whatever Object is sent to it through the post request (for Testing porpuses only!)
# POST    /echojson                                       @controllers.PdStore.echoJson

#websocket link -> recieves a message as a string and broadcasts it to all the clients that are connected to the websocket (for Testing porpuses only!)
# GET     /stream                                         @controllers.PdStore.stream

# GET     /teststream                                     @controllers.teststream.socket

# GET     /teststreamview                                 @controllers.teststream.teststreamview

# Create a nes set of triples.
# POST 	/triples/create 								@controllers.PdStore.create

# GET     /assets/*file                                   @controllers.Assets.at(path="/public", file)

# Yeoman routes
# GET 	/ui 	@com.tuplejump.playYeoman.Yeoman.index
	
# -> 		/ui/ 	yeoman.Routes
